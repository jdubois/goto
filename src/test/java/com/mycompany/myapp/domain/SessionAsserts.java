package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SessionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionAllPropertiesEquals(Session expected, Session actual) {
        assertSessionAutoGeneratedPropertiesEquals(expected, actual);
        assertSessionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionAllUpdatablePropertiesEquals(Session expected, Session actual) {
        assertSessionUpdatableFieldsEquals(expected, actual);
        assertSessionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionAutoGeneratedPropertiesEquals(Session expected, Session actual) {
        assertThat(expected)
            .as("Verify Session auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionUpdatableFieldsEquals(Session expected, Session actual) {
        assertThat(expected)
            .as("Verify Session relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getRoom()).as("check room").isEqualTo(actual.getRoom()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionUpdatableRelationshipsEquals(Session expected, Session actual) {
        assertThat(expected)
            .as("Verify Session relationships")
            .satisfies(e -> assertThat(e.getSpeaker()).as("check speaker").isEqualTo(actual.getSpeaker()))
            .satisfies(e -> assertThat(e.getConference()).as("check conference").isEqualTo(actual.getConference()))
            .satisfies(e -> assertThat(e.getAttendees()).as("check attendees").isEqualTo(actual.getAttendees()));
    }
}
